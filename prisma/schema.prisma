generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
 // relationMode = "prisma"
}

//generator erd {
//  provider = "prisma-erd-generator"
//}


model User {
  id String @id 
  username String @unique 
  password String 
  is_admin Boolean @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}



model CommomUser {
  id String @id
  cpf String @unique
  email String @unique
  name String
  phone_number String
  date_birth DateTime

  schedules Schedule[]  

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("commom-users")
}



model Schedule {
  id String @id

  user_id String
  user CommomUser @relation(fields: [user_id] , references: [id])

  service_id String
  service Service @relation(fields: [service_id], references: [id])

  hour_id String
  hour HourAvailable @relation(fields: [hour_id], references: [id])


  date DateTime

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([ service_id  , date , hour_id ])
  @@map("schedules")

}


model Location{
  id String @id
  address String
  name String
  service Service[]
}


model Service {
  id String @id 
  service_name String
  hours HourAvailable[]
  schedules Schedule[]
  days_disabled DayDisabled[]
  date_disabled DateDisabled[]
  interval_available IntervalDateAvailable?

  location Location @relation(fields: [location_id], references: [id])
  location_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("service")

}

model HourAvailable {
  id String @id 
  hour Int 
  minutes Int
  is_active Boolean @default(true)
  service_id String

  service Service @relation(fields: [service_id], references: [id])
  
  schedules Schedule[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


  @@map("hours_available")

}


model DayDisabled {
  id String @id 
  day Int

  service Service @relation(fields: [service_id], references: [id])
  service_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([id, day])
  @@map("days_disabled")

}

model DateDisabled {
  id String @id 

  date DateTime

  service Service @relation(fields: [service_id], references: [id])
  service_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([id, date])
  @@map("dates_disabled")

}

model IntervalDateAvailable {
  id String @id 

  intial_date DateTime
  final_date DateTime

  service Service @relation(fields: [service_id], references: [id])
  service_id String @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("interval_available")
}